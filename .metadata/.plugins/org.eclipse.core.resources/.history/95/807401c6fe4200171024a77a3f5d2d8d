package servidor;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.TreeSet;

public class Sorteio extends Thread{
	
	private List<Socket> listaCliente;
	private TreeSet<Integer> listaSorteio = new TreeSet<Integer>();
	private TreeSet<Integer> listaSorteado = new TreeSet<Integer>();
	private Random sorteio;
	private boolean isParar;
	private int codigoJogador= 0;
	private Integer listaNumeros[];
	private boolean jogador;
	private boolean isEnvioCartela;
	
	private ArrayList<TreeSet<Integer>> cartelas;
	
	public Sorteio(List<Socket> listaCliente, ArrayList<TreeSet<Integer>> cartelas)
	{
		this.listaCliente = listaCliente;
		this.sorteio = new Random();
		this.cartelas = cartelas;
		/*while(listaSorteio.size() <= 75)
		{
			listaSorteio.add(sorteio.nextInt(75)+1);
		}*/
	}
	
	public void confereJogo(int codigoJogador, Integer listaNumeros[], boolean jogador)
	{
		this.isParar = true;
		this.codigoJogador = codigoJogador;
		this.listaNumeros = listaNumeros;
		this.jogador = jogador;
	}
	
	private List<PrintWriter> listaEscritores() throws IOException
	{
		List<PrintWriter> ret = new ArrayList<PrintWriter>();
		for(Socket s: this.listaCliente)
		{
			ret.add(new PrintWriter(s.getOutputStream()));
		}
		return ret;
	}
	
	private void enviarSorteio(Integer numero) throws IOException
	{
		List<PrintWriter> listaEsc = this.listaEscritores();
		String n = "" + (sorteio.nextInt(75)+1);
		for(PrintWriter e: listaEsc)
		{
			System.out.println("Sorteio no ar");
			e.println(n);
			e.flush();
		}
	}
	
	private void enviarCartelas() throws IOException
	{
		String numeros[] = new String[this.cartelas.size()];
		List<PrintWriter> listaEsc = this.listaEscritores();
		int cont = 0;
		while(cont < this.cartelas.size())
		{
			
			TreeSet<Integer> num = this.cartelas.remove(cont);
			for(Integer n: num)
			{
				numeros[cont] += ""+n+",";
			}
			cont++;
		}
		cont = 0; 
		for(PrintWriter e: listaEsc)
		{
			System.out.println("Cartela: " + cont);
			e.println(numeros[cont]);
			e.flush();
			cont++;
		}
		this.isEnvioCartela = true;
	}
	
	public void run()
	{
		try
		{
			while(true)
			{
				if(this.isParar){
					int cont = 0;
					if(this.listaNumeros.length != 25)
						this.jogador = false;
					
					for(Integer n: this.listaSorteado)
					{
						if(!this.listaNumeros[cont].equals(n.toString()))
						{
							this.jogador = false;
							break;
						}
						this.jogador = true;
					}
				}
				
				//Integer num = this.listaSorteio.first();
				//this.listaSorteado.add(num);
				this.enviarSorteio(1);
				this.sleep(10000);
			}
		}catch(Exception ex){
			
		}
	}
	
}
